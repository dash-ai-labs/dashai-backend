name: Push to Artifact Registry and Deploy to Cloud Run

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: dash-ai-app
  REGION: us-central1
  REPO_NAME: web
  IMAGE_NAME: backend
  TAG: latest
  FASTAPI_SERVICE: fastapi-service
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v2
        with:
          project_id: ${{ env.PROJECT_ID }}
          export_default_credentials: true
      
      - name: Set dynamic image name
        run: |
          echo "FASTAPI_IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" >> $GITHUB_ENV

      - name: Authenticate Docker for Artifact Registry
        run: |
          gcloud auth configure-docker $REGION-docker.pkg.dev

      - name: Build Docker image
        run: |
          # Try to pull the latest image for cache
          docker pull $FASTAPI_IMAGE || echo "No previous image found for cache"
          # Build with cache from previous image
          docker build --cache-from $FASTAPI_IMAGE -t $FASTAPI_IMAGE .

      - name: Push Docker image
        run: |
          docker push $FASTAPI_IMAGE

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up gcloud CLI
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CLOUD_RUN_DEPLOY_KEY }}

      - name: Set dynamic image name
        run: |
          echo "FASTAPI_IMAGE=${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:${{ env.TAG }}" >> $GITHUB_ENV

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.FASTAPI_SERVICE }}
          image: ${{ env.FASTAPI_IMAGE }}
          region: ${{ env.REGION }}
          
      - name: Show Output
        run: |
          echo "Cloud Run service deployed to URL: ${{ steps.deploy.outputs.url }}"