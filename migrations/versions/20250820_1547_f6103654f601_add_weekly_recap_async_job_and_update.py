"""Add weekly recap async job and update

Revision ID: f6103654f601
Revises: ec7d1130f95e
Create Date: 2025-08-20 15:47:32.679152

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f6103654f601"
down_revision: Union[str, None] = "ec7d1130f95e"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "weekly_email_recaps", sa.Column("completed", sa.Boolean(), nullable=True)
    )
    op.add_column(
        "weekly_email_recaps",
        sa.Column("email_ids", postgresql.ARRAY(sa.UUID()), nullable=True),
    )
    op.drop_constraint(
        "weekly_email_recaps_email_id_fkey", "weekly_email_recaps", type_="foreignkey"
    )
    op.drop_column("weekly_email_recaps", "categories")
    op.drop_column("weekly_email_recaps", "email_id")
    op.drop_column("weekly_email_recaps", "summary")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "weekly_email_recaps",
        sa.Column("summary", sa.TEXT(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "weekly_email_recaps",
        sa.Column("email_id", sa.UUID(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "weekly_email_recaps",
        sa.Column(
            "categories",
            postgresql.ARRAY(sa.VARCHAR()),
            autoincrement=False,
            nullable=True,
        ),
    )
    op.create_foreign_key(
        "weekly_email_recaps_email_id_fkey",
        "weekly_email_recaps",
        "emails",
        ["email_id"],
        ["id"],
    )
    op.drop_column("weekly_email_recaps", "email_ids")
    op.drop_column("weekly_email_recaps", "completed")
    # ### end Alembic commands ###
