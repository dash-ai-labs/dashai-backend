"""create migration

Revision ID: b93fc08c3005
Revises: 
Create Date: 2025-02-14 23:15:13.368774

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b93fc08c3005"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("google_id", sa.String(), nullable=True),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("last_login", sa.DateTime(), nullable=True),
        sa.Column("profile_pic", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("google_id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "email_accounts",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("provider", sa.Enum("GMAIL", name="emailprovider"), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("profile_pic", sa.String(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("last_sync", sa.DateTime(), nullable=True),
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column(
            "status",
            sa.Enum(
                "NOT_STARTED", "SYNCING", "SUCCESS", "FAILED", name="emailaccountstatus"
            ),
            server_default="SUCCESS",
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_email_accounts_email"), "email_accounts", ["email"], unique=True
    )
    op.create_index(
        op.f("ix_email_accounts_id"), "email_accounts", ["id"], unique=False
    )
    op.create_table(
        "email_labels",
        sa.Column("user_id", sa.UUID(), nullable=True),
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("color", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_email_labels_id"), "email_labels", ["id"], unique=False)
    op.create_table(
        "emails",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("sender", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("sender_name", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("to", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("subject", sa.String(), nullable=True),
        sa.Column("date", sa.DateTime(), nullable=True),
        sa.Column("cc", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("processed", sa.Boolean(), nullable=True),
        sa.Column("summary", sa.String(), nullable=True),
        sa.Column("content", sa.String(), nullable=True),
        sa.Column("snippet", sa.String(), nullable=True),
        sa.Column("raw_content", sa.UnicodeText(), nullable=True),
        sa.Column("thread_id", sa.String(), nullable=True),
        sa.Column("labels", postgresql.ARRAY(sa.String()), nullable=True),
        sa.Column("email_id", sa.String(), nullable=True),
        sa.Column("email_account_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_account_id"],
            ["email_accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "email_account_id", "email_id", name="unique_email_account_id_email_id"
        ),
    )
    op.create_index(op.f("ix_emails_id"), "emails", ["id"], unique=False)
    op.create_table(
        "tokens",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("token", sa.String(), nullable=True),
        sa.Column("refresh_token", sa.String(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=True),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("email_account_id", sa.UUID(), nullable=True),
        sa.ForeignKeyConstraint(
            ["email_account_id"],
            ["email_accounts.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_tokens_id"), "tokens", ["id"], unique=False)
    op.create_index(
        op.f("ix_tokens_refresh_token"), "tokens", ["refresh_token"], unique=True
    )
    op.create_index(op.f("ix_tokens_token"), "tokens", ["token"], unique=True)
    op.create_table(
        "email_label_association",
        sa.Column("email_id", sa.UUID(), nullable=False),
        sa.Column("email_label_id", sa.UUID(), nullable=False),
        sa.ForeignKeyConstraint(
            ["email_id"],
            ["emails.id"],
        ),
        sa.ForeignKeyConstraint(
            ["email_label_id"],
            ["email_labels.id"],
        ),
        sa.PrimaryKeyConstraint("email_id", "email_label_id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("email_label_association")
    op.drop_index(op.f("ix_tokens_token"), table_name="tokens")
    op.drop_index(op.f("ix_tokens_refresh_token"), table_name="tokens")
    op.drop_index(op.f("ix_tokens_id"), table_name="tokens")
    op.drop_table("tokens")
    op.drop_index(op.f("ix_emails_id"), table_name="emails")
    op.drop_table("emails")
    op.drop_index(op.f("ix_email_labels_id"), table_name="email_labels")
    op.drop_table("email_labels")
    op.drop_index(op.f("ix_email_accounts_id"), table_name="email_accounts")
    op.drop_index(op.f("ix_email_accounts_email"), table_name="email_accounts")
    op.drop_table("email_accounts")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")
    # ### end Alembic commands ###
